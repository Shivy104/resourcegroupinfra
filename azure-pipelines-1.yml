# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: papapool

variables:
  TF_VERSION: '1.5.7'

steps:

- powershell: |
    $terraformVersion = "$(TF_VERSION)"
    $zipFile = "terraform_${terraformVersion}_windows_amd64.zip"
    $url = "https://releases.hashicorp.com/terraform/$terraformVersion/$zipFile"
    $installDir = "$(Build.SourcesDirectory)\terraform"

    Write-Host "Downloading Terraform version $terraformVersion from $url"
    Invoke-WebRequest -Uri $url -OutFile $zipFile -UseBasicParsing

    if (Test-Path $installDir) {
      Remove-Item -Recurse -Force $installDir
    }
    New-Item -ItemType Directory -Path $installDir | Out-Null

    Write-Host "Extracting Terraform to $installDir"
    Expand-Archive -Path $zipFile -DestinationPath $installDir -Force

    Write-Host "Terraform version:"
    & "$installDir\terraform.exe" version
  displayName: 'Install Terraform (Windows)'

- task: AzureCLI@2
  displayName: 'Login to Azure'
  inputs:
    azureSubscription: 'my-azure-connection'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az account show

- powershell: |
    & "$(Build.SourcesDirectory)\terraform\terraform.exe" init
  displayName: 'Terraform Init'
  workingDirectory: $(Build.SourcesDirectory)

- powershell: |
    & "$(Build.SourcesDirectory)\terraform\terraform.exe" plan
  displayName: 'Terraform Plan'
  workingDirectory: $(Build.SourcesDirectory)

- powershell: |
    & "$(Build.SourcesDirectory)\terraform\terraform.exe" apply -auto-approve
  displayName: 'Terraform Apply'
  workingDirectory: $(Build.SourcesDirectory)
