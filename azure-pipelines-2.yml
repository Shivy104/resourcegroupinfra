# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: papapool  # Make sure your self-hosted agent is in this agent pool
  demands:
    - agent.os -equals Windows_NT

variables:
  terraformVersion: '1.6.6'

stages:
- stage: Terraform
  jobs:
  - job: TerraformJob
    steps:
    - checkout: self

    - task: PowerShell@2
      displayName: 'Download Terraform'
      inputs:
        targetType: 'inline'
        script: |
          Invoke-WebRequest -Uri "https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_windows_amd64.zip" -OutFile "terraform.zip"
          Expand-Archive -Path "terraform.zip" -DestinationPath "$(Build.SourcesDirectory)\terraform"
          $env:Path += ";$(Build.SourcesDirectory)\terraform"
          terraform -version

    - task: AzureCLI@2
      displayName: 'Terraform Init/Plan/Apply'
      inputs:
        azureSubscription: 'my-azure-connection'  # Replace this with your Azure service connection name
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $terraformPath = "$(Build.SourcesDirectory)\terraform\terraform.exe"
          Write-Host "Terraform path: $terraformPath"

          cd "$(Build.SourcesDirectory)"

          Write-Host "Running Terraform Init..."
          & "$terraformPath" init

          Write-Host "Running Terraform Plan..."
          & "$terraformPath" plan

          Write-Host "Running Terraform Apply..."
          & "$terraformPath" apply -auto-approve
