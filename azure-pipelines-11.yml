trigger: 
- feature/*
- main

pool: NewAgent

variables:
  workDir: '$(System.DefaultWorkingDirectory)/environments/dev'

stages:
- stage: Build
  displayName: Build
  jobs: 
  - job: TerraformInitFmtValidate
    displayName: Terraform Init, Fmt, Validate Job
    steps: 
    - task: CmdLine@2
      inputs:
        script: 'echo Hello world'
        
  - job: TerraformInitPlan
    displayName: Terraform Init and Plan Job
    steps: 
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: $(workDir)
        backendServiceArm: 'Workload_Identity_testing'
        backendAzureRmStorageAccountName: 'devopsinsidersstates'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'dev.terraform.tfstate'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: $(workDir)
        environmentServiceNameAzureRM: 'Workload_Identity_testing'

- stage: Scanning
  displayName: Scanning
  jobs: 
  - job: TFSecScanningJob
    displayName: TFSEC Scanning Wala Job
    pool: NewAgent
    steps:
    - task: tfsec@1
      inputs:
        version: 'v1.26.0'
        dir: $(workDir)

  - job: TfLintScanningJob
    displayName: TFLINT Scanning Wala Job
    pool: NewAgent
    steps:
    - task: CmdLine@2
      inputs:
        script: 'echo Hello world'

- stage: Deploy
  displayName: Deploy
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  jobs: 
  - job: ManualValidation
    displayName: Manual Validation kardo Please
    pool: server
    steps:
    - task: ManualValidation@1
      inputs:
        notifyUsers: 'sonambewafaa420@gmail.com'
        approvers: 'sonambewafaa420@gmail.com'
        instructions: 'Plan check karle pagli...'

  - job: TerraformApply
    displayName: Terraform Apply wala Job
    dependsOn: ManualValidation
    pool: NewAgent
    steps:
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: $(workDir)
        backendServiceArm: 'Workload_Identity_testing'
        backendAzureRmStorageAccountName: 'devopsinsidersstates'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'dev.terraform.tfstate'
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: $(workDir)
        environmentServiceNameAzureRM: 'Workload_Identity_testing'
